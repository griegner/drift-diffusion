[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "drift-diffusion"
version = "0.0.1"
authors = [{name = "Gabriel Riegner", email = "gariegner@ucsd.edu"}]
description = "drift diffusion models of decision making"
readme = "README.md"
requires-python = ">=3.9"
# scikit-learn: numpy, scipy, joblib
dependencies = ["scikit-learn>=1.5.2", "statsmodels>=0.14.4"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
python = ">=3.9"
scikit-learn = ">=1.5.2"
statsmodels = ">=0.14.4"

[tool.pixi.pypi-dependencies]
drift_diffusion = { path=".", editable=true }

[tool.pixi.feature.lint.dependencies]
pre-commit = "4.0.1"
black = "24.10.0"
ruff = "0.7.0"

[tool.pixi.feature.lint.tasks]
black = { cmd = "black --check --diff drift_diffusion && black --check --diff examples" }
ruff = { cmd = "ruff check --output-format=full drift_diffusion && ruff check --output-format=full examples" }
lint = { depends_on = ["black", "ruff"]}

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.pixi.feature.test.tasks]
test = { cmd = "pytest -vsl --cov=drift_diffusion --cov-report=xml drift_diffusion" }

[tool.pixi.feature.notebook.dependencies]
notebook = "*"
seaborn = "*"
ipympl = "*"
ipywidgets = "*"


[tool.pixi.environments]
lint = ["lint"]
test = ["test"]
notebook = ["notebook"]
dev = ["lint", "test", "notebook"]

[tool.black]
line-length = 88
target_version = ['py38', 'py39', 'py310']
preview = true
exclude = '''
/(
    \.eggs         # exclude a few common directories in the
  | \.git          # root of the project
  | \.vscode
)/
'''

[tool.ruff]
# max line length for black
line-length = 88
target-version = "py38"
exclude=[
    ".git",
    "__pycache__",
    "dist",
    "build",
]

[tool.ruff.lint]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
select = ["E", "F", "W", "I"]
ignore=[
    # space before : (needed for how black formats slicing)
    "E203",
    # do not assign a lambda expression, use a def
    "E731",
    # do not use variables named 'l', 'O', or 'I'
    "E741",
]

[tool.ruff.lint.per-file-ignores]
# It's fine not to put the import at the top of the file in the examples
# folder.
"examples/*"=["E402"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --color=yes"
doctest_optionflags = "NORMALIZE_WHITESPACE"
